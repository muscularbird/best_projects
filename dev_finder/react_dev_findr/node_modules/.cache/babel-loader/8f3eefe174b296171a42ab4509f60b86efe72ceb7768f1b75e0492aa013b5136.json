{"ast":null,"code":"var _jsxFileName = \"/home/muscularbird/appli2/src/pages/Survey/index.jsx\",\n  _s = $RefreshSig$();\nimport { Link, useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport colors from '../../utils/Styles/colors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionContent = styled.span`\n  margin: 30px;\n`;\n_c = QuestionContent;\nconst SurveyContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n_c2 = SurveyContainer;\nconst LinkWrapper = styled.div`\n  padding-top: 30px;\n  & a {\n    color: black;\n  }\n  & a:first-of-type {\n    margin-right: 20px;\n  }\n`;\n_c3 = LinkWrapper;\nconst QuestionTitle = styled.h2`\n  text-decoration: underline;\n  text-decoration-color: ${colors.primary};\n`;\n_c4 = QuestionTitle;\nfunction Survey() {\n  _s();\n  const {\n    questionNumber\n  } = useParams();\n  const questionNumberInt = parseInt(questionNumber);\n  const prevQuestionNumber = questionNumberInt === 1 ? 1 : questionNumberInt - 1;\n  const nextQuestionNumber = questionNumberInt + 1;\n  const [surveyDataVar, setSurveyData] = useState({});\n  useEffect(() => {\n    fetch(`http://localhost:8000/survey`).then(response => response.json().then(({\n      surveyData\n    }) => setSurveyData(surveyData)).catch(error => console.log(error)));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(SurveyContainer, {\n    children: [/*#__PURE__*/_jsxDEV(QuestionTitle, {\n      children: [\"Question \", questionNumber]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(QuestionContent, {\n      children: [surveyData[1], \"   \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LinkWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/survey/${prevQuestionNumber}`,\n        children: \"Pr\\xE9c\\xE9dent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), surveyData[questionNumberInt + 1] ? /*#__PURE__*/_jsxDEV(Link, {\n        to: `/survey/${nextQuestionNumber}`,\n        children: \"Suivant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/results\",\n        children: \"R\\xE9sultats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(Survey, \"9fBhc4k6vIZnlZhu3KDOCW6Hchk=\", false, function () {\n  return [useParams];\n});\n_c5 = Survey;\nexport default Survey;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"QuestionContent\");\n$RefreshReg$(_c2, \"SurveyContainer\");\n$RefreshReg$(_c3, \"LinkWrapper\");\n$RefreshReg$(_c4, \"QuestionTitle\");\n$RefreshReg$(_c5, \"Survey\");","map":{"version":3,"names":["Link","useParams","useState","useEffect","styled","colors","jsxDEV","_jsxDEV","QuestionContent","span","_c","SurveyContainer","div","_c2","LinkWrapper","_c3","QuestionTitle","h2","primary","_c4","Survey","_s","questionNumber","questionNumberInt","parseInt","prevQuestionNumber","nextQuestionNumber","surveyDataVar","setSurveyData","fetch","then","response","json","surveyData","catch","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","to","_c5","$RefreshReg$"],"sources":["/home/muscularbird/appli2/src/pages/Survey/index.jsx"],"sourcesContent":["import { Link, useParams } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport colors from '../../utils/Styles/colors'\n\nconst QuestionContent = styled.span`\n  margin: 30px;\n`\n\nconst SurveyContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst LinkWrapper = styled.div`\n  padding-top: 30px;\n  & a {\n    color: black;\n  }\n  & a:first-of-type {\n    margin-right: 20px;\n  }\n`\n\nconst QuestionTitle = styled.h2`\n  text-decoration: underline;\n  text-decoration-color: ${colors.primary};\n`\n\nfunction Survey() {\n    const { questionNumber } = useParams()\n    const questionNumberInt = parseInt(questionNumber)\n    const prevQuestionNumber = questionNumberInt === 1 ? 1 : questionNumberInt - 1\n    const nextQuestionNumber = questionNumberInt + 1\n    const [surveyDataVar, setSurveyData] = useState({})\n \n    useEffect(() => {\n        fetch(`http://localhost:8000/survey`)\n            .then((response) => response.json()\n            .then(({ surveyData }) => setSurveyData(surveyData))\n            .catch((error) => console.log(error))\n        )\n    }, [])\n    return (\n        <SurveyContainer>\n            <QuestionTitle>Question {questionNumber}</QuestionTitle>\n        <QuestionContent>{surveyData[1]}   </QuestionContent>\n            <LinkWrapper>\n                <Link to={`/survey/${prevQuestionNumber}`}>Précédent</Link>\n                {surveyData[questionNumberInt + 1] ? (\n                    <Link to={`/survey/${nextQuestionNumber}`}>Suivant</Link>\n                ) : (\n                    <Link to=\"/results\">Résultats</Link>\n                )}\n            </LinkWrapper>\n        </SurveyContainer>\n    )\n}\n \nexport default Survey"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}